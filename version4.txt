###########################################################################
#
#  system "RHEA" 0.4 に就いて
#
#  by oZ/acy
#  (c) 2004-2005 oZ/acy.  ALL RIGHTS RESERVED.
#
#  履歴
#    28 Feb 2004  作成
#    30 Jan 2005  現状にあわせて改訂
###########################################################################

1. 概要 (last update: 30 Jan 2005)

本文書は、system "RHEA" ver. 0.3 の持つべき機能、實裝方法および現状に就いての覺書である。


2. version 0.3 からの移行關聯 (last update: 30 Jan 2005)

以下は、既に行はれた ver. 0.3 からの移行に際して書き留めたものに修正を加へたものである。

2.1 version 0.3 の問題點 (30 Jan 2005: 2. => 2.1; 文章を修正)

以下に ver 0.3 での問題點を擧げる。
  * 出力が HTML のみであり、それに特化したフォーマットになりつつある。
  * トップレベル記述 top.xml が文書の増加に伴ひ肥大化しつつあり、此の先、管理が困難になることが豫想される。


2.2 version 0.3 の基本構造 (30 Jan 2005: 3. => 2.2)

以下より構成されてゐる。
  * 基本變換部
  * 日記項目分類生成部
  * 辭書生成部

各構成ファイルと役割を以下に示す。
  cgilib.rb   : CGI 用のユーティリティ
  file.rb     : ファイル操作ユーティリティ
  xml.rb      : XML 讀み込み・構造化ユーティリティ

  rhea         : システムトップレベル (各バージョントップレベルを呼び出す)
  rhea-v0_3.rb : version 0.3 トップレベル

  r-site.rb   : サイト情報クラス
  r-param.rb  : パラメータ設定

  r-rsrc.rb   : 各文書の出力
  rbody.rb    : 各文書の本體出力
    r-sec.rb  : "sectionalize" タイプの文書の出力
    r-item.rb : "itemize" タイプの文書の出力 (既に事實上廢止??)
    r-di.rb   : 日記用特別フォーマットの文書の出力

  rdiary.rb   : 日記項目分類の出力
  rdict.rb    : 辭書システム

  refitem.rb  : 參照生成用の情報クラス
  r-ext.rb    : 外部參照情報クラス
  r-log.rb    : 文書タイトル・更新情報クラス

  r-doc.rb    : 文書出力の補助モジュール定義
  r-print.rb  : 文書の HTML化コア
  refprint.rb : 參照を考慮した HTML化コアの擴張
  r-word.rb   : 辭書登録見出し情報クラス


2.3 要求事項 (30 Jan 2005: 4. => 2.3)

以下に要求事項を擧げる。
  * LaTeX ソースの生成
  * ターゲットのコマンドライン引數による指定


2.4 基本方針 (30 Jan 2005: 5. => 2.4)

基本方針を以下に示す。
  * 現行の sectionalize 形式を基本形式とする。
  * 辭書システムは一般の入力形式を吐く今まで通りの形で据ゑ置く。
  * 日記システムは辭書システム類似の形に變更。
    出力は、最終日内容、最終月内容、各月内容、項目分類一覽、各月一覽。
    舊版については sectionalize 形式のままであるので、日記システムの對象外。
  * HTML Top Index および更新履歴は辭書、日記同樣にサブシステムに分離。
  * リソース指定はトップ記述に書かずに、トップ記述で指定するファイルに記述するように變更。現行の外部參照と似た感じになる。(0.3 修正濟: 28 Feb 2004)
  * 内部 XML データを REXML に變更。 (追加: 29 Apr 2004)


3. 現状 (last update: 30 Jan 2005)

現状の概要を以下に示す。
  * XSLT による XML => HTML 變換に依據する。
  * TeX 出力にも不十分ながら漸次對應。 これも XSLT に依據してゐる。
  * 各サブシステムは、XSLT コンバートのための Makefile 生成や、コンテンツ間の關聯附けのための XSLT 生成を行ふ。
  * システム全體は Makefile で書かれ、サブシステムや、XSLT エンジンをファイル間の依存關係に基づき起動する。



#eof
